{"ast":null,"code":"var _jsxFileName = \"/Users/tabishalikhan/temp/untitled folder/take4media/src/pages/amazon-research/components/amazon-research-services/amazon-research-services.js\",\n    _s = $RefreshSig$();\n\nimport PlusDetail from \"../plus-detail/plus-detail\";\nimport { GiBrain } from \"react-icons/gi\";\nimport Fade from \"react-reveal/Fade\";\nimport \"./amazon-research-services.scss\";\nimport Heading from \"./../../../../components/common/heading/heading\";\nimport { client } from \"./../../../../client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AmazonResearchService = () => {\n  _s();\n\n  const [ARServices, setARServices] = useState();\n  useEffect(() => {\n    client.getEntries({\n      content_type: \"amazonResearchServices\",\n      select: \"fields\"\n    }).then(res => {\n      setARServices(res.items);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"creative-services\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        heading: \"Our Services\",\n        subHeading: \"We deliver productive services for our clientele.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: ARServices && ARServices.map((ar, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 ` + (i == 0 ? \"service-1\" : i == 1 ? \"service-2 border-left\" : i == 2 ? \"service-3 border-top\" : i == 3 ? \"service-4 border-left border-top\" : \"\"),\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            duration: 2000,\n            delay: 300,\n            big: true,\n            children: /*#__PURE__*/_jsxDEV(PlusDetail, {\n              icon: /*#__PURE__*/_jsxDEV(GiBrain, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 27\n              }, this),\n              heading: ar.fields.serviceName,\n              paragraph: ar.fields.serviceDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AmazonResearchService, \"5D0nc1voI2iKuo+IRozNdEWGTPc=\");\n\n_c = AmazonResearchService;\nexport default AmazonResearchService;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmazonResearchService\");","map":{"version":3,"sources":["/Users/tabishalikhan/temp/untitled folder/take4media/src/pages/amazon-research/components/amazon-research-services/amazon-research-services.js"],"names":["PlusDetail","GiBrain","Fade","Heading","client","useEffect","useState","AmazonResearchService","ARServices","setARServices","getEntries","content_type","select","then","res","items","catch","err","console","log","map","ar","i","fields","serviceName","serviceDescription"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,4BAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,iCAAP;AACA,OAAOC,OAAP,MAAoB,iDAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,EAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,MAAM,CACHM,UADH,CACc;AACVC,MAAAA,YAAY,EAAE,wBADJ;AAEVC,MAAAA,MAAM,EAAE;AAFE,KADd,EAKGC,IALH,CAKSC,GAAD,IAAS;AACbL,MAAAA,aAAa,CAACK,GAAG,CAACC,KAAL,CAAb;AACD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,OAAO,EAAC,cADV;AAEE,QAAA,UAAU,EAAC;AAFb;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGT,UAAU,IACTA,UAAU,CAACY,GAAX,CAAe,CAACC,EAAD,EAAKC,CAAL,kBACb;AACE,UAAA,SAAS,EACN,iDAAD,IACCA,CAAC,IAAI,CAAL,GACG,WADH,GAEGA,CAAC,IAAI,CAAL,GACA,uBADA,GAEAA,CAAC,IAAI,CAAL,GACA,sBADA,GAEAA,CAAC,IAAI,CAAL,GACA,kCADA,GAEA,EATJ,CAFJ;AAAA,iCAcE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAE,IAAhB;AAAsB,YAAA,KAAK,EAAE,GAA7B;AAAkC,YAAA,GAAG,MAArC;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBADR;AAEE,cAAA,OAAO,EAAED,EAAE,CAACE,MAAH,CAAUC,WAFrB;AAGE,cAAA,SAAS,EAAEH,EAAE,CAACE,MAAH,CAAUE;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CArDD;;GAAMlB,qB;;KAAAA,qB;AAuDN,eAAeA,qBAAf","sourcesContent":["import PlusDetail from \"../plus-detail/plus-detail\";\nimport { GiBrain } from \"react-icons/gi\";\nimport Fade from \"react-reveal/Fade\";\nimport \"./amazon-research-services.scss\";\nimport Heading from \"./../../../../components/common/heading/heading\";\nimport { client } from \"./../../../../client\";\nimport { useEffect, useState } from \"react\";\n\nconst AmazonResearchService = () => {\n  const [ARServices, setARServices] = useState();\n  useEffect(() => {\n    client\n      .getEntries({\n        content_type: \"amazonResearchServices\",\n        select: \"fields\",\n      })\n      .then((res) => {\n        setARServices(res.items);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"creative-services\">\n      <div className=\"container\">\n        <Heading\n          heading=\"Our Services\"\n          subHeading=\"We deliver productive services for our clientele.\"\n        />\n        <div className=\"row\">\n          {ARServices &&\n            ARServices.map((ar, i) => (\n              <div\n                className={\n                  `col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12 ` +\n                  (i == 0\n                    ? \"service-1\"\n                    : i == 1\n                    ? \"service-2 border-left\"\n                    : i == 2\n                    ? \"service-3 border-top\"\n                    : i == 3\n                    ? \"service-4 border-left border-top\"\n                    : \"\")\n                }\n              >\n                <Fade duration={2000} delay={300} big>\n                  <PlusDetail\n                    icon={<GiBrain />}\n                    heading={ar.fields.serviceName}\n                    paragraph={ar.fields.serviceDescription}\n                  />\n                </Fade>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AmazonResearchService;\n"]},"metadata":{},"sourceType":"module"}