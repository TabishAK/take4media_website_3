{"ast":null,"code":"var _jsxFileName = \"/Users/tabishalikhan/temp/untitled folder/take4media/src/components/cardPanel/cardPanel.js\";\nimport BannerCard from \"../cards/bannerCard/bannerCard\";\nimport { IoMdPaperPlane } from \"react-icons/io\";\nimport { GoLightBulb } from \"react-icons/go\";\nimport { GiBrain } from \"react-icons/gi\";\nimport \"./cardPanel.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardPanel = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container upper-gap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row cards-panel\",\n      children: props.data && props.data.bannerCards.map((bcards, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12\",\n        children: /*#__PURE__*/_jsxDEV(BannerCard, {\n          class: \"cards\",\n          name: bcards.heading,\n          icon: i == 0 ? /*#__PURE__*/_jsxDEV(IoMdPaperPlane, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this) : i == 1 ? /*#__PURE__*/_jsxDEV(GoLightBulb, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this) : i == 2 ? /*#__PURE__*/_jsxDEV(GiBrain, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }, this) : \"\",\n          text: bcards.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardPanel;\nexport default CardPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPanel\");","map":{"version":3,"sources":["/Users/tabishalikhan/temp/untitled folder/take4media/src/components/cardPanel/cardPanel.js"],"names":["BannerCard","IoMdPaperPlane","GoLightBulb","GiBrain","CardPanel","props","data","bannerCards","map","bcards","i","heading","text"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,gCAAvB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGA,KAAK,CAACC,IAAN,IACCD,KAAK,CAACC,IAAN,CAAWC,WAAX,CAAuBC,GAAvB,CAA2B,CAACC,MAAD,EAASC,CAAT,kBACzB;AAAK,QAAA,SAAS,EAAC,gDAAf;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,OADR;AAEE,UAAA,IAAI,EAAED,MAAM,CAACE,OAFf;AAGE,UAAA,IAAI,EACFD,CAAC,IAAI,CAAL,gBACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBADF,GAEIA,CAAC,IAAI,CAAL,gBACF,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADE,GAEAA,CAAC,IAAI,CAAL,gBACF,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBADE,GAGF,EAXN;AAcE,UAAA,IAAI,EAAED,MAAM,CAACG;AAdf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BD;;KAAMR,S;AA8BN,eAAeA,SAAf","sourcesContent":["import BannerCard from \"../cards/bannerCard/bannerCard\";\nimport { IoMdPaperPlane } from \"react-icons/io\";\nimport { GoLightBulb } from \"react-icons/go\";\nimport { GiBrain } from \"react-icons/gi\";\nimport \"./cardPanel.scss\";\n\nconst CardPanel = (props) => {\n  return (\n    <div className=\"container upper-gap\">\n      <div className=\"row cards-panel\">\n        {props.data &&\n          props.data.bannerCards.map((bcards, i) => (\n            <div className=\"col-xl-4 col-lg-4 col-md-6 col-sm-12 col-xs-12\">\n              <BannerCard\n                class=\"cards\"\n                name={bcards.heading}\n                icon={\n                  i == 0 ? (\n                    <IoMdPaperPlane />\n                  ) : i == 1 ? (\n                    <GoLightBulb />\n                  ) : i == 2 ? (\n                    <GiBrain />\n                  ) : (\n                    \"\"\n                  )\n                }\n                text={bcards.text}\n              />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CardPanel;\n"]},"metadata":{},"sourceType":"module"}